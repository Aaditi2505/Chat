# -*- coding: utf-8 -*-
"""add2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17H7GeXLk5E9wbHMdY1tS4bPDVAQNMKMj
"""
 
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer
from gtts import gTTS
import os
import uuid
import gradio as gr
import whisper

# --- Load dataset and train model ---
df = pd.read_csv("kamaraj_college_faq.csv")
df.dropna(inplace=True)

label_encoder = LabelEncoder()
df["Answer_Label"] = label_encoder.fit_transform(df["Answer"])

vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df["Question"])
y = df["Answer_Label"]

model = LogisticRegression()
model.fit(X, y)

# --- Text-to-Speech (gTTS) ---
def speak_text(text):
    tts = gTTS(text=text, lang='en')
    filename = f"audio_{uuid.uuid4().hex}.mp3"
    tts.save(filename)

    # Cross-platform audio play
    if os.name == "nt":
        os.system(f"start {filename}")  # Windows
    elif os.uname().sysname == "Darwin":
        os.system(f"afplay {filename}")  # macOS
    else:
        os.system(f"mpg123 {filename}")  # Linux

# --- Whisper model load (for speech-to-text) ---
whisper_model = whisper.load_model("base")

# --- Chatbot Function ---
def chatbot(audio=None, text=None):
    if audio:
        result = whisper_model.transcribe(audio)
        user_input = result["text"]
    elif text:
        user_input = text
    else:
        return "‚ùó Please speak or type a question."

    # Predict answer
    vec = vectorizer.transform([user_input])
    prediction = model.predict(vec)[0]
    answer = label_encoder.inverse_transform([prediction])[0]

    # Speak out the answer
    speak_text(answer)

    return f"üó£Ô∏è You asked: {user_input}\n‚úÖ Answer: {answer}"

# --- Gradio Interface ---
iface = gr.Interface(
    fn=chatbot,
    inputs=[
        gr.Audio(sources=["microphone"], type="filepath", label="üé§ Speak your question"),
        gr.Textbox(lines=2, placeholder="Or type your question here", label="üìù Text question")
    ],
    outputs="text",
    title="üéì Kamaraj College FAQ Chatbot",
    description="Ask about Kamaraj College by voice or text. The bot will speak the answer too.",
)

iface.launch()
